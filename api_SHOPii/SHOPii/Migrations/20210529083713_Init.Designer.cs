// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SHOPii.Models;

namespace SHOPii.Migrations
{
    [DbContext(typeof(SHOPIIContext))]
    [Migration("20210529083713_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SHOPii.Models.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultDeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DEFAULT_DELIVERY_ID")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("Fullname")
                        .HasColumnName("FULLNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnName("IMAGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("PASSWORD")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONE_NUMBER")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Username")
                        .HasName("PK__ACCOUNT__B15BE12F28AFB08A");

                    b.ToTable("ACCOUNT");
                });

            modelBuilder.Entity("SHOPii.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("IMAGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CATEGORY");
                });

            modelBuilder.Entity("SHOPii.Models.DeliveryAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnName("FULLNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LATITUDE")
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LONGITUDE")
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PHONE_NUMBER")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("DELIVERY_ADDRESS");
                });

            modelBuilder.Entity("SHOPii.Models.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Isfavorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ISFAVORITE")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ProductId")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Username");

                    b.ToTable("FAVORITE");
                });

            modelBuilder.Entity("SHOPii.Models.Ordering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELIVERY_ID")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("ShopUsername")
                        .IsRequired()
                        .HasColumnName("SHOP_USERNAME")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ShopUsername");

                    b.HasIndex("Username");

                    b.ToTable("ORDERING");
                });

            modelBuilder.Entity("SHOPii.Models.OrderingDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnName("COUNT")
                        .HasColumnType("int");

                    b.Property<int?>("OrderingId")
                        .HasColumnName("ORDERING_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderingId");

                    b.HasIndex("ProductId");

                    b.ToTable("ORDERING_DETAIL");
                });

            modelBuilder.Entity("SHOPii.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CATEGORY_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("IMAGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnName("PRICE")
                        .HasColumnType("bigint");

                    b.Property<string>("ShopUsername")
                        .IsRequired()
                        .HasColumnName("SHOP_USERNAME")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("PRODUCT");
                });

            modelBuilder.Entity("SHOPii.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("IMAGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PRODUCT_IMAGE");
                });

            modelBuilder.Entity("SHOPii.Models.ShopAccount", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImage")
                        .HasColumnName("COVER_IMAGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("IMAGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnName("LATITUDE")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Longitude")
                        .HasColumnName("LONGITUDE")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("PASSWORD")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PHONE_NUMBER")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Username")
                        .HasName("PK__SHOP_ACC__B15BE12FB7F1BC99");

                    b.ToTable("SHOP_ACCOUNT");
                });

            modelBuilder.Entity("SHOPii.Models.DeliveryAddress", b =>
                {
                    b.HasOne("SHOPii.Models.Account", "UsernameNavigation")
                        .WithMany("DeliveryAddress")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK__DELIVERY___USERN__440B1D61")
                        .IsRequired();
                });

            modelBuilder.Entity("SHOPii.Models.Favorite", b =>
                {
                    b.HasOne("SHOPii.Models.Product", "Product")
                        .WithMany("Favorite")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__FAVORITE__PRODUC__5DCAEF64")
                        .IsRequired();

                    b.HasOne("SHOPii.Models.Account", "UsernameNavigation")
                        .WithMany("Favorite")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK__FAVORITE__USERNA__5CD6CB2B")
                        .IsRequired();
                });

            modelBuilder.Entity("SHOPii.Models.Ordering", b =>
                {
                    b.HasOne("SHOPii.Models.ShopAccount", "ShopUsernameNavigation")
                        .WithMany("Ordering")
                        .HasForeignKey("ShopUsername")
                        .HasConstraintName("FK__ORDERING__shop_u__531856C7")
                        .IsRequired();

                    b.HasOne("SHOPii.Models.Account", "UsernameNavigation")
                        .WithMany("Ordering")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK__ORDERING__USERNA__02084FDA")
                        .IsRequired();
                });

            modelBuilder.Entity("SHOPii.Models.OrderingDetail", b =>
                {
                    b.HasOne("SHOPii.Models.Ordering", "Ordering")
                        .WithMany("OrderingDetail")
                        .HasForeignKey("OrderingId")
                        .HasConstraintName("FK__ORDERING___ORDER__05D8E0BE");

                    b.HasOne("SHOPii.Models.Product", "Product")
                        .WithMany("OrderingDetail")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ORDERING___PRODU__06CD04F7");
                });

            modelBuilder.Entity("SHOPii.Models.Product", b =>
                {
                    b.HasOne("SHOPii.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__PRODUCT__CATEGOR__2A4B4B5E")
                        .IsRequired();
                });

            modelBuilder.Entity("SHOPii.Models.ProductImage", b =>
                {
                    b.HasOne("SHOPii.Models.Product", "Product")
                        .WithMany("ProductImage")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__PRODUCT_I__PRODU__300424B4")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
